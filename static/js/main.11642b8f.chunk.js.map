{"version":3,"sources":["components/DrumPad.js","components/Display.js","components/Volume.js","components/PowerSwitch.js","components/Board.js","App.js","index.js"],"names":["Pad","styled","div","DrumPad","label","handler","onClick","Panel","Display","text","defaultProps","Control","Label","Widget","input","Volume","volume","type","onChange","min","max","value","PowerSwitch","powerOn","htmlFor","name","onToggle","Pads","drumURL","drumSounds","sample","Board","useState","setPowerOn","displayText","setDisplayText","setVolume","timerID","useRef","updateDisplay","clearTimeout","current","setTimeout","handleButtonPress","event","key","target","innerText","toLowerCase","sound","audio","Audio","play","forEach","load","useEffect","document","addEventListener","removeEventListener","DrumMachine","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.11642b8f.chunk.js","sourcesContent":["import React from 'react'\nimport { string, func } from 'prop-types'\nimport styled from 'styled-components'\n\nconst Pad = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 80px;\n  height: 80px;\n  font-size: 22px;\n  border: 1px solid grey;\n  border-radius: 4px;\n  box-shadow: 1px 3px 6px grey;\n  background-color: rgb(233, 241, 204);\n  cursor: pointer;\n\n  :active {\n    background-color: lightblue;\n    color: white;\n  }\n`\n\nconst DrumPad = ({ label, handler }) => {\n  return <Pad onClick={handler}>{label}</Pad>\n}\n\nDrumPad.propTypes = {\n  label: string.isRequired,\n  handler: func.isRequired,\n}\n\nexport default DrumPad\n","import React from 'react'\nimport { string } from 'prop-types'\nimport styled from 'styled-components'\n\nconst Panel = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 26px;\n  height: 60px;\n  margin-bottom: 0;\n  padding: 8px;\n  border: 2px solid rgb(99, 36, 36);\n  border-bottom: none;\n  border-radius: 10px 10px 0 0;\n  box-shadow: 1px 3px 18px grey;\n  background-color: rgb(231, 241, 243);\n  color: black;\n  box-sizing: border-box;\n`\n\nconst Display = ({ text }) => {\n  return <Panel>{text}</Panel>\n}\n\nDisplay.propTypes = {\n  text: string,\n}\n\nDisplay.defaultProps = {\n  text: '',\n}\n\nexport default Display\n","import React from 'react'\nimport { number, func } from 'prop-types'\nimport styled from 'styled-components'\n\nconst Control = styled.div`\n  display: flex;\n  background-color: var(--primary-color);\n  margin-top: 30px;\n  border: 1px solid grey;\n  border-radius: 20px;\n  box-shadow: var(--shadow);\n`\n\nconst Label = styled.div`\n  font-size: 36px;\n  transform: translate(0, -1px);\n  padding: 0 10px;\n  color: white;\n  cursor: default;\n`\n\nconst Widget = styled.input`\n  width: 214px;\n  background-color: var(--primary-color);\n`\n\nconst Volume = ({ volume, handler }) => {\n  return (\n    <Control>\n      <Label>-</Label>\n      <Widget\n        type=\"range\"\n        onChange={handler}\n        min=\"0\"\n        max=\"100\"\n        value={volume}\n      />\n      <Label>+</Label>\n    </Control>\n  )\n}\n\nVolume.propTypes = {\n  volume: number.isRequired,\n  handler: func.isRequired,\n}\n\nexport default Volume\n","import React from 'react'\nimport { Toggle } from 'react-toggle-component'\nimport { bool, func } from 'prop-types'\nimport styled from 'styled-components'\n\nconst Label = styled.label`\n  font-weight: bold;\n  font-family: 'Joti One', cursive;\n  display: grid;\n  grid-auto-flow: column;\n  grid-auto-columns: min-content;\n  white-space: nowrap;\n  align-items: center;\n  cursor: pointer;\n`\n\nconst PowerSwitch = ({ powerOn, handler }) => {\n  return (\n    <Label htmlFor=\"toggle-1\">\n      Power\n      <Toggle name=\"toggle-1\" onToggle={handler} value={powerOn} />\n    </Label>\n  )\n}\n\nPowerSwitch.propTypes = {\n  powerOn: bool.isRequired,\n  handler: func.isRequired,\n}\n\nexport default PowerSwitch\n","import React, { useState, useEffect, useRef } from 'react'\nimport DrumPad from './DrumPad.js'\nimport Display from './Display.js'\nimport Volume from './Volume.js'\nimport PowerSwitch from './PowerSwitch.js'\nimport styled from 'styled-components'\n\nconst Pads = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-content: space-between;\n  width: 260px;\n  height: 260px;\n  border: 2px solid var(--secondary-color);\n  border-radius: 0 0 10px 10px;\n  padding: 16px;\n  box-shadow: var(--shadow);\n  background-color: var(--primary-color);\n`\nconst drumURL = 'https://s3.amazonaws.com/freecodecamp/drums/'\n\nconst drumSounds = [\n  {\n    name: 'Heater 1',\n    sample: 'Heater-1.mp3',\n  },\n  {\n    name: 'Heater 2',\n    sample: 'Heater-2.mp3',\n  },\n  {\n    name: 'Chord 1',\n    sample: 'Chord_1.mp3',\n  },\n  {\n    name: 'Heater 3',\n    sample: 'Heater-3.mp3',\n  },\n  {\n    name: 'Heater 4',\n    sample: 'Heater-4_1.mp3',\n  },\n  {\n    name: 'Clap',\n    sample: 'Heater-6.mp3',\n  },\n  {\n    name: 'Open HH',\n    sample: 'Dsc_Oh.mp3',\n  },\n  {\n    name: \"Kick n' Hat\",\n    sample: 'Kick_n_Hat.mp3',\n  },\n  {\n    name: 'Closed HH',\n    sample: 'RP4_KICK_1.mp3',\n  },\n]\n\nconst Board = () => {\n  let [powerOn, setPowerOn] = useState(false)\n  let [displayText, setDisplayText] = useState('')\n  let [volume, setVolume] = useState(50)\n  let timerID = useRef(null)\n\n  const preloadDrumSounds = () => {\n    drumSounds.forEach(sound => {\n      let audio = new Audio(drumURL + sound.sample)\n      audio.load(sound.sample)\n    })\n  }\n  const runDisplayTimer = () => {\n    clearTimeout(timerID.current)\n    timerID.current = setTimeout(() => {\n      setDisplayText('')\n    }, 1500)\n  }\n  const updateDisplay = text => {\n    setDisplayText(text)\n    runDisplayTimer()\n  }\n  const handleButtonPress = event => {\n    if (!powerOn) return\n\n    let key = ''\n    if (event.type === 'keydown') {\n      key = event.key\n    } else if (event.type === 'click') {\n      key = event.target.innerText.toLowerCase()\n    }\n    let sound = null\n    switch (key) {\n      case 'q':\n        sound = drumSounds[0]\n        break\n      case 'w':\n        sound = drumSounds[1]\n        break\n      case 'e':\n        sound = drumSounds[2]\n        break\n      case 'a':\n        sound = drumSounds[3]\n        break\n      case 's':\n        sound = drumSounds[4]\n        break\n      case 'd':\n        sound = drumSounds[5]\n        break\n      case 'z':\n        sound = drumSounds[6]\n        break\n      case 'x':\n        sound = drumSounds[7]\n        break\n      case 'c':\n        sound = drumSounds[8]\n        break\n      default:\n    }\n    if (sound) {\n      let audio = new Audio(drumURL + sound.sample)\n      audio.volume = volume / 100\n      audio.play()\n      updateDisplay(sound.name)\n    }\n  }\n  const handleVolume = event => {\n    setVolume(event.target.value)\n  }\n  const handlePowerSwitch = () => {\n    setPowerOn(!powerOn)\n    updateDisplay(powerOn ? 'Bye!' : 'Drum Machine!')\n  }\n\n  preloadDrumSounds()\n  useEffect(() => {\n    document.addEventListener('keydown', handleButtonPress)\n\n    return () => {\n      document.removeEventListener('keydown', handleButtonPress)\n    }\n  })\n  return (\n    <div>\n      <PowerSwitch powerOn={powerOn} handler={handlePowerSwitch} />\n      <Display text={displayText} />\n      <Pads>\n        <DrumPad label=\"Q\" handler={handleButtonPress} />\n        <DrumPad label=\"W\" handler={handleButtonPress} />\n        <DrumPad label=\"E\" handler={handleButtonPress} />\n        <DrumPad label=\"A\" handler={handleButtonPress} />\n        <DrumPad label=\"S\" handler={handleButtonPress} />\n        <DrumPad label=\"D\" handler={handleButtonPress} />\n        <DrumPad label=\"Z\" handler={handleButtonPress} />\n        <DrumPad label=\"X\" handler={handleButtonPress} />\n        <DrumPad label=\"C\" handler={handleButtonPress} />\n      </Pads>\n      <Volume volume={volume} handler={handleVolume} />\n    </div>\n  )\n}\n\nexport default Board\n","import React from 'react'\nimport styled from 'styled-components'\nimport Board from './components/Board.js'\nimport './App.css'\n\nconst DrumMachine = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 90vh;\n  font-family: 'Joti One', cursive;\n`\n\nfunction App() {\n  return (\n    <DrumMachine>\n      <Board />\n    </DrumMachine>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}