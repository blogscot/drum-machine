{"version":3,"sources":["components/DrumPad.js","components/Display.js","components/Volume.js","components/PowerSwitch.js","components/Board.js","App.js","index.js"],"names":["Pad","styled","div","DrumPad","document","addEventListener","this","props","handler","removeEventListener","label","onClick","Component","Panel","Display","text","defaultProps","Control","Label","Widget","input","Volume","volume","type","onChange","min","max","value","PowerSwitch","powerOn","htmlFor","name","onToggle","Pads","drumURL","drumSounds","sample","Board","handleButtonPress","event","state","key","target","innerText","toLowerCase","sound","audio","Audio","play","setState","bind","handleVolume","handlePowerSwitch","preloadDrumSounds","forEach","load","setTimeout","DrumMachine","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c2f01af9.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { string, func } from 'prop-types'\nimport styled from 'styled-components'\n\nconst Pad = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 80px;\n  height: 80px;\n  font-size: 22px;\n  border: 1px solid grey;\n  border-radius: 4px;\n  box-shadow: 1px 3px 6px grey;\n  background-color: rgb(233, 241, 204);\n  cursor: pointer;\n\n  :active {\n    background-color: lightblue;\n    color: white;\n  }\n`\n\nclass DrumPad extends Component {\n  static propTypes = {\n    label: string.isRequired,\n    handler: func.isRequired,\n  }\n  componentDidMount() {\n    document.addEventListener('keydown', this.props.handler)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.props.handler)\n  }\n  render() {\n    const { label, handler } = this.props\n    return <Pad onClick={handler}>{label}</Pad>\n  }\n}\n\nexport default DrumPad\n","import React from 'react'\nimport { string } from 'prop-types'\nimport styled from 'styled-components'\n\nconst Panel = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 26px;\n  height: 60px;\n  margin-bottom: 0;\n  padding: 8px;\n  border: 2px solid rgb(99, 36, 36);\n  border-bottom: none;\n  border-radius: 10px 10px 0 0;\n  box-shadow: 1px 3px 18px grey;\n  background-color: rgb(231, 241, 243);\n  color: black;\n  box-sizing: border-box;\n`\n\nconst Display = ({ text }) => {\n  return <Panel>{text}</Panel>\n}\n\nDisplay.propTypes = {\n  text: string,\n}\n\nDisplay.defaultProps = {\n  text: '',\n}\n\nexport default Display\n","import React from 'react'\nimport { number, func } from 'prop-types'\nimport styled from 'styled-components'\n\nconst Control = styled.div`\n  display: flex;\n  background-color: var(--primary-color);\n  margin-top: 30px;\n  border: 1px solid grey;\n  border-radius: 20px;\n  box-shadow: var(--shadow);\n`\n\nconst Label = styled.div`\n  font-size: 36px;\n  transform: translate(0, -1px);\n  padding: 0 10px;\n  color: white;\n  cursor: default;\n`\n\nconst Widget = styled.input`\n  width: 214px;\n  background-color: var(--primary-color);\n`\n\nconst Volume = ({ volume, handler }) => {\n  return (\n    <Control>\n      <Label>-</Label>\n      <Widget\n        type=\"range\"\n        onChange={handler}\n        min=\"0\"\n        max=\"100\"\n        value={volume}\n      />\n      <Label>+</Label>\n    </Control>\n  )\n}\n\nVolume.propTypes = {\n  volume: number.isRequired,\n  handler: func.isRequired,\n}\n\nexport default Volume\n","import React from 'react'\nimport { Toggle } from 'react-toggle-component'\nimport { bool, func } from 'prop-types'\nimport styled from 'styled-components'\n\nconst Label = styled.label`\n  font-weight: bold;\n  font-family: 'Joti One', cursive;\n  display: grid;\n  grid-auto-flow: column;\n  grid-auto-columns: min-content;\n  white-space: nowrap;\n  align-items: center;\n  cursor: pointer;\n`\n\nconst PowerSwitch = ({ powerOn, handler }) => {\n  return (\n    <Label htmlFor=\"toggle-1\">\n      Power\n      <Toggle name=\"toggle-1\" onToggle={handler} value={powerOn} />\n    </Label>\n  )\n}\n\nPowerSwitch.propTypes = {\n  powerOn: bool.isRequired,\n  handler: func.isRequired,\n}\n\nexport default PowerSwitch\n","import React, { Component } from 'react'\nimport DrumPad from './DrumPad.js'\nimport Display from './Display.js'\nimport Volume from './Volume.js'\nimport PowerSwitch from './PowerSwitch.js'\nimport styled from 'styled-components'\n\nconst Pads = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-content: space-between;\n  width: 260px;\n  height: 260px;\n  border: 2px solid var(--secondary-color);\n  border-radius: 0 0 10px 10px;\n  padding: 16px;\n  box-shadow: var(--shadow);\n  background-color: var(--primary-color);\n`\nconst drumURL = 'https://s3.amazonaws.com/freecodecamp/drums/'\n\nconst drumSounds = [\n  {\n    name: 'Heater 1',\n    sample: 'Heater-1.mp3',\n  },\n  {\n    name: 'Heater 2',\n    sample: 'Heater-2.mp3',\n  },\n  {\n    name: 'Chord 1',\n    sample: 'Chord_1.mp3',\n  },\n  {\n    name: 'Heater 3',\n    sample: 'Heater-3.mp3',\n  },\n  {\n    name: 'Heater 4',\n    sample: 'Heater-4_1.mp3',\n  },\n  {\n    name: 'Clap',\n    sample: 'Heater-6.mp3',\n  },\n  {\n    name: 'Open HH',\n    sample: 'Dsc_Oh.mp3',\n  },\n  {\n    name: \"Kick n' Hat\",\n    sample: 'Kick_n_Hat.mp3',\n  },\n  {\n    name: 'Closed HH',\n    sample: 'RP4_KICK_1.mp3',\n  },\n]\n\nclass Board extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      powerOn: false,\n      name: '',\n      volume: 50,\n    }\n    this.handleButtonPress = this.handleButtonPress.bind(this)\n    this.handleVolume = this.handleVolume.bind(this)\n    this.handlePowerSwitch = this.handlePowerSwitch.bind(this)\n    this.preloadDrumSounds()\n  }\n  preloadDrumSounds() {\n    drumSounds.forEach(sound => {\n      let audio = new Audio(drumURL + sound.sample)\n      audio.load(sound.sample)\n    })\n  }\n  handleButtonPress = event => {\n    if (!this.state.powerOn) return\n\n    let key = ''\n    if (event.type === 'keydown') {\n      key = event.key\n    } else if (event.type === 'click') {\n      key = event.target.innerText.toLowerCase()\n    }\n    let sound = null\n    switch (key) {\n      case 'q':\n        sound = drumSounds[0]\n        break\n      case 'w':\n        sound = drumSounds[1]\n        break\n      case 'e':\n        sound = drumSounds[2]\n        break\n      case 'a':\n        sound = drumSounds[3]\n        break\n      case 's':\n        sound = drumSounds[4]\n        break\n      case 'd':\n        sound = drumSounds[5]\n        break\n      case 'z':\n        sound = drumSounds[6]\n        break\n      case 'x':\n        sound = drumSounds[7]\n        break\n      case 'c':\n        sound = drumSounds[8]\n        break\n      default:\n    }\n    if (sound) {\n      let audio = new Audio(drumURL + sound.sample)\n      audio.volume = this.state.volume / 100\n      audio.play()\n      this.setState({\n        name: sound.name,\n      })\n    }\n  }\n  handleVolume(event) {\n    this.setState({\n      volume: event.target.value,\n    })\n  }\n  handlePowerSwitch(event) {\n    const { powerOn } = this.state\n    this.setState({\n      powerOn: !powerOn,\n      name: powerOn ? 'Bye!' : 'Welcome!',\n    })\n    setTimeout(() => {\n      this.setState({\n        name: '',\n      })\n    }, 1000)\n  }\n  powerOff() {}\n  render() {\n    const { powerOn, name, volume } = this.state\n    return (\n      <div>\n        <PowerSwitch powerOn={powerOn} handler={this.handlePowerSwitch} />\n        <Display text={name} />\n        <Pads>\n          <DrumPad label=\"Q\" handler={this.handleButtonPress} />\n          <DrumPad label=\"W\" handler={this.handleButtonPress} />\n          <DrumPad label=\"E\" handler={this.handleButtonPress} />\n          <DrumPad label=\"A\" handler={this.handleButtonPress} />\n          <DrumPad label=\"S\" handler={this.handleButtonPress} />\n          <DrumPad label=\"D\" handler={this.handleButtonPress} />\n          <DrumPad label=\"Z\" handler={this.handleButtonPress} />\n          <DrumPad label=\"X\" handler={this.handleButtonPress} />\n          <DrumPad label=\"C\" handler={this.handleButtonPress} />\n        </Pads>\n        <Volume volume={volume} handler={this.handleVolume} />\n      </div>\n    )\n  }\n}\n\nexport default Board\n","import React from 'react'\nimport styled from 'styled-components'\nimport Board from './components/Board.js'\nimport './App.css'\n\nconst DrumMachine = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 90vh;\n  font-family: 'Joti One', cursive;\n`\n\nfunction App() {\n  return (\n    <DrumMachine>\n      <Board />\n    </DrumMachine>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}